/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    bool boolAns(TreeNode* root, int uni){
        if(!root) return true;
        if(root->val != uni) return false;
        if(!root->left && !root->right) return true;
        if(root->left && root->left->val != uni) return false;
        if(root->right && root->right->val != uni) return false;
        return boolAns(root->left,uni) && boolAns(root->right,uni);
      
    }
    bool isUnivalTree(TreeNode* root) {
        if(!root) return true;
        int uni = root->val;
        return boolAns(root,uni);
    }
};
