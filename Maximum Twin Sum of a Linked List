/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int pairSum(ListNode* head) {
        if(!head || !head->next) return 0;
        ListNode* tmp = head;
        vector<int> v;
        while(tmp != NULL){
            v.push_back(tmp->val);
            tmp = tmp->next;
        }
        int max = v[v.size()-1]+v[0];
        for(int i = 1 ; i < (v.size()/2) ; i++){
            if(max < (v[v.size()-i-1] + v[i])) max = v[v.size()-i-1] + v[i];
        }
        return max;
    }
};
